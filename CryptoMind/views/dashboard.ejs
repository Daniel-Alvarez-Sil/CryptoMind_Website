<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Dashboard - Jugadores</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  
  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Orbitron:wght@600&display=swap" rel="stylesheet">

  <!-- W3.CSS -->
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

  <!-- Chart.js & Matrix Plugin -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix@1.2.0/dist/chartjs-chart-matrix.min.js"></script>

  <!-- Custom Styles -->
  <link rel="stylesheet" href="/css/dashboard.css">
</head>

<% if (showNavbar) { %>
  <%- include ('./components/navbar.ejs') %>
<% } %>

<body class="w3-light-grey">

  <div class="w3-container w3-padding-32 big-margin">

    <div class="card-grid w3-center">

      <!-- Tarjetas -->
      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-32 w3-hover-shadow">
          <h2 class="w3-text-indigo">Jugadores Activos</h2>
          <p class="w3-xlarge"><%= activos %></p>
        </div>
      </div>

      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-32 w3-hover-shadow">
          <h2 class="w3-text-indigo">Promedio de Juego</h2>
          <p class="w3-xlarge"><%= promedio %></p>
        </div>
      </div>

      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-32 w3-hover-shadow">
          <h2 class="w3-text-indigo">Preguntas Correctas al Día</h2>
          <p class="w3-xlarge"><%= correctas %></p>
        </div>
      </div>

      <!-- Ranking Tokens -->
      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-16 w3-hover-shadow">
          <h2 class="w3-text-indigo">Top 10 Usuarios por Tokens</h2>
          <ul class="w3-ul w3-hoverable w3-margin-top">
            <% ranking.forEach((user, index) => { %>
              <li class="w3-padding-12">
                <strong><%= index + 1 %>. <%= user.username %></strong>
                <span class="w3-right w3-tag w3-round"><%= user.tokens %> tokens</span>
              </li>
            <% }) %>
          </ul>
        </div>
      </div>

      <!-- Ranking Puntaje -->
      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-16 w3-hover-shadow">
          <h2 class="w3-text-indigo">Top 10 Usuarios por Puntaje</h2>
          <ul class="w3-ul w3-hoverable w3-margin-top">
            <% puntajeRanking.forEach((user, index) => { %>
              <li class="w3-padding-12">
                <strong><%= index + 1 %>. <%= user.username %></strong>
                <span class="w3-right w3-tag w3-round"><%= user.puntaje %> pts</span>
              </li>
            <% }) %>
          </ul>
        </div>
      </div>
      
      <!-- Gráfico de barras -->
      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-16 w3-hover-shadow">
          <h2 class="w3-text-indigo">Engagement por País</h2>
          <div style="height: 100%;">
            <canvas id="engagementChart"></canvas>
          </div>
        </div>
      </div>

      <!-- Heatmap -->
      <div class="w3-margin-bottom">
        <div class="w3-card-4 w3-round-xlarge w3-padding-16 w3-hover-shadow" style="height: 400px;">
          <h2 class="w3-text-indigo">Mapa de Calor de Sesiones</h2>
          <div style="height: 250px;">
            <canvas id="heatmapChart"></canvas>
          </div>
        </div>
      </div>

    </div>
  </div>

  <!-- Charts Scripts -->
  <script>
    const ctx = document.getElementById('engagementChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: <%- JSON.stringify(paises) %>,
        datasets: [{
          label: 'Minutos Jugados',
          data: <%- JSON.stringify(minutosPorPais) %>,
          backgroundColor: 'rgb(143, 73, 155)',
          borderColor: 'rgba(255, 255, 255, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true, 
            color: 'white'
          }
        }
      }
    });
  </script>

  <script>
    const heatmapCtx = document.getElementById('heatmapChart').getContext('2d');
    new Chart(heatmapCtx, {
      type: 'matrix',
      data: {
        datasets: [{
          label: 'Sesiones por hora/día',
          data: <%- JSON.stringify(heatmap) %>,
          backgroundColor(ctx) {
            const value = ctx.dataset.data[ctx.dataIndex].v;
            const alpha = value / 10;
            return `rgba(143, 73, 155, ${Math.min(alpha, 1)})`;
          },
          borderColor: 'rgba(255, 255, 255, 1)',
           borderWidth(ctx) {
            const value = ctx.dataset.data[ctx.dataIndex].v;
            return value === 0 ? 0 : 1;
          },
          width: ctx => (ctx.chart.chartArea ? ctx.chart.chartArea.width / 24 - 2 : 20),
          height: ctx => (ctx.chart.chartArea ? ctx.chart.chartArea.height / 7 - 2 : 30)
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          tooltip: {
            callbacks: {
              title() { return ''; },
              label(ctx) {
                const {x, y, v} = ctx.raw;
                const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];
                return `${days[y]}, ${x}:00 - ${x + 1}:00 — ${v} sesiones`;
              }
            }
          },
          legend: { display: false }
        },
        scales: {
          x: {
            type: 'linear',
            position: 'top',
            ticks: {
              stepSize: 1,
              callback: val => `${val}:00`, 
              color: 'white'
            }, 
            grid: {
              color: 'rgba(255, 255, 255, 0.3)' // white grid lines, slightly transparent
            }
          },
          y: {
            type: 'linear',
            reverse: true,
            ticks: {
              stepSize: 1,
              callback: val => ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'][val],
              color: 'white'
            }, 
             grid: {
              color: 'rgba(255, 255, 255, 0.3)' // white grid lines, slightly transparent
            }
          }
        }
      }
    });
  </script>
</body>
</html>
